
name parameter num-qubits for mqgate and lrstick "n"? Ask the community

gate-size: auto // may be (width: [length] or auto, height: length or auto)



No global default values. Instead suggest:
#let myqcircuit = qcircuit.with(background: black, ...)


gate shortcut predefinitions in scope for #gate: X, Y, Z; T, S, SGD, H
e.g., gate.X, gate.Z


Specification for size-hint

size-hint
(
  // Dimensions of content, used to determine minimum cell size 
  // and to compute the coordinate from which to draw the content if `offset` is auto
  width: [length],
  height: [length], 

  // Offset for drawing coordinates from center cell. 
  // - If none, then the drawing point will be the cell center
  // - If auto, half of width and height are subtracted from the cell center (thus centering the drawn content). 
  // - If a dictionary is given, for each of the possible axis (x and y), the allowed options are
  //   - none (drawn directly from center coordinate, like above) 
  //   - auto (like above), 
  //   - or a length (offset the drawing position relative to the center by given amount). 
  offset: auto or none or (x: [auto or none or length], y: [auto or none or length])

  // Size (measured from drawing point) that is respected for the circuits bounding box but
  // independent of drawing position and cell size. This is used for annotations and stick-functions
  float-size: none or (width: [length], height: [length]) // measured from drawing point


example: lstick:
height: normal, width: 3*draw-params.padding or similar, to increase length of incoming wire
offset: none or maybe (x: none)
float-size: (width: -lstick-width, height: 0pt)





draw-ctrl: if open: true, detect if fill is stroke and has width. if not, take wire width 

    if not repr(stroke).contains("pt") {
      let a = repr(draw-params.wire).match(regex("\\d+\.\\d+")).text
      stroke += float(a)*1pt
    }